---
title: "Orchestrating Microbiome Analysis with Bioconductor"
author: Tuomas Borman
format:
  revealjs:
    self-contained: true
    slide-number: true
    preview-links: auto
    logo: images/mia_logo.png
    footer: <https://microbiome.github.io/>
title-slide-attributes: 
  data-background-image: images/ismb_eccb2025.png
  data-background-size: 15%
  data-background-position: 2% 2%
bibliography: references.bib
---

## Microbiome data science

::: columns
::: {.column width="50%"}

- Interactions between microbes and host
- Sequencing data
    <small>- Other omics regularly incorporated</small>

:::

::: {.column width="50%"}

<figure style="font-size: 0.5em;">
  <img src="images/paste-DD45BC4A.png" alt="Moreno-Indias et al. (2021) Statistical and Machine Learning Techniques in Human Microbiome Studies: Contemporary Challenges and Solutions. Frontiers in Microbiology.">
  <figcaption>[@MorenoIndias2021]</figcaption>
</figure>

:::

:::

## Challenges

::: columns
::: {.column width="50%"}

Lack of...

- Standardization
- Scalability, support for multi-table data
- Interoperability with other fields

:::

::: {.column width="50%"}

<figure style="font-size: 0.5em;">
  <img src="images/paste-DD45BC4A.png" alt="Moreno-Indias et al. (2021) Statistical and Machine Learning Techniques in Human Microbiome Studies: Contemporary Challenges and Solutions. Frontiers in Microbiology.">
  <figcaption>[@MorenoIndias2021]</figcaption>
</figure>

:::

:::

## Bioconductor

- Community-driven open-source project

1. Training & community support
2. Conferences & workshops
3. Bioinformatics software

<br>

![](images/bioconductor_logo_rgb.jpg){style="float:right"}

## Software

- ~2,300 R packages
- Review, testing, documentation

```{r}
#| label: bioc_packages
#| eval: true

# Get packages and info based on their BiocViews
pkgs <- BiocPkgTools::biocPkgList()
#
pkgs[["SE"]] <- sapply(pkgs$Depends, function(x) any(grepl("summarizedexperiment", x, ignore.case = TRUE)) )
fields <- sapply(pkgs$biocViews, function(x){
    field <- "Other"
    if( any(grepl("genomic|genetic|gene|genom|DNA", x, ignore.case = TRUE)) ){
        field <- "Genomics"
    }
    if( any(grepl("proteomics|protein", x, ignore.case = TRUE)) ){
        field <- "Proteomics"
    }
    if( any(grepl("metabolomics|metabolome|metabolite|Lipidom|massspectro", x, ignore.case = TRUE)) ){
        field <- "Metabolomics"
    }
    if( any(grepl("transcripto|RNA-seq|RNA", x, ignore.case = TRUE)) ){
        field <- "Transcriptomics"
    }
    if( any(grepl("immuno", x, ignore.case = TRUE)) ){
        field <- "Immunology"
    }
    if( any(grepl("cytom", x, ignore.case = TRUE)) ){
        field <- "Cytometrics"
    }
    if( any(grepl("microarray|chip", x, ignore.case = TRUE)) ){
        field <- "Microarray"
    }
    if( any(grepl("single-cell|singlecell", x, ignore.case = TRUE)) ){
        field <- "Single-cell"
    }
    if( any(grepl("metagenom|microbiome|16S|microbiota|amplicon|shotgun|microb|metatranscript|metametabolo|metaproteo", x, ignore.case = TRUE)) ){
        field <- "Microbiome"
    }
    return(field)
})
pkgs[["Field"]] <- fields
pkgs[pkgs[["Package"]] %in% c("mia", "miaViz", "miaSim", "iSEEtree", "HoloFoodR", "MGnifyR"), "Field"] <- "Microbiome"
# Get download stats 
df <- BiocPkgTools::biocDownloadStats()
# Subset to include only packages which BiocView we have
df <- df[df$Package %in% pkgs$Package, ]
# submitted <- BiocPkgTools::firstInBioc(df)
# df <- df[df$Package %in% pkgs$Package, ] # Take into account only current packages
pkgs <- pkgs[, c("Package", "SE", "Field")]
# Get table that shows which package is available in each date
dates <- df$Date |> unique()
dates <- dates[ dates < lubridate::floor_date(Sys.time(), "month") ]
available <- lapply(dates, function(date){
    temp <- df[df[["Date"]] == date, ]
    temp <- temp[match(unique(df$Package), temp$Package), ]
    temp <- temp[["Nb_of_distinct_IPs"]] > 0 | temp[["Nb_of_downloads"]] > 0
    temp[is.na(temp)] <- FALSE
    temp <- as.numeric(temp)
    return(temp)
})
available <- do.call(cbind, available) |> as.data.frame()
rownames(available) <- unique(df$Package)
colnames(available) <- dates
#
ind <- pkgs[match(unique(df$Package), pkgs$Package), "Field"][[1]]
pkgs_date <- rowsum(available, group = ind)
# Put into long format
library(tidyverse)
pkgs_date <- pkgs_date %>%
    rownames_to_column("Field") %>%
    pivot_longer(
        cols = colnames(pkgs_date)[ !colnames(pkgs_date) %in% c("Field")], 
        names_to = "Date",
        values_to = "N"
    )
pkgs_date[["Date"]] <- as.Date(pkgs_date[["Date"]])

# Create a plot that shows number of package through date
p <- ggplot(pkgs_date, aes(x = Date, y = N, fill = Field)) +
    geom_area() +
    theme_classic(base_size = 18) +
    scale_fill_brewer(palette = "Paired") +
    labs(x = "Year", y = "Number of packages") +
    scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
    scale_x_date(
        expand = c(0, 0),
        limits = c(min(pkgs_date[["Date"]]), max(pkgs_date[["Date"]]))
    )
p
```

## Data containers

- The core of software
- Structured, standardized way to manage complex data
- Enables modular, efficient workflows

```{r}
#| label: data_container

# Load libraries
library(ggplot2)
library(ggforce)

# Adjusting the text positions for better alignment
ellipse_data <- data.frame(
    x = c(0, 0, 0),         # Centers of ellipses
    y = c(2, 1, 0),         # Centers of ellipses
    a = c(4, 3, 2),         # Widths of ellipses
    b = c(3, 2, 1),         # Heights of ellipses
    label = c("COMMUNITY", "METHODS", "DATA CONTAINER"),  # Labels for each ellipse
    label_y = c(4, 1.75, 0) # Adjusted vertical positions for labels
)

# Plot with adjusted labels
ggplot() +
    geom_ellipse(data = ellipse_data, 
                 aes(x0 = x, y0 = y, a = a, b = b, angle = 0),
                 color = "darkgreen", fill = "grey90", alpha = 0.7) +
    geom_text(data = ellipse_data, 
              aes(x = x, y = label_y, label = label), 
              size = 5, fontface = "bold") +
    coord_fixed() +
    theme_void()
```

##

```{r}
#| label: pages_and_book

library(magick)

img1 <- image_read("images/pile_of_papers.webp")
img2 <- image_read("images/book.png")
arrow <- image_blank(width = 500, height = 1000, color = "none") %>%
  image_annotate("→", size = 200, gravity = "center", color = "black")

# Combine images with the arrow
final_image <- image_append(c(img1, arrow, img2), stack = FALSE)

# Display the final image
final_image
```

##

```{r}
#| label: data_and_data_container

library(magick)

img1 <- image_read("images/unorganized_data.webp")
img2 <- image_read("images/TreeSE.png")
img2 <- image_scale(img2, "125%")
arrow <- image_blank(width = 500, height = 1000, color = "none") %>%
  image_annotate("→", size = 200, gravity = "center", color = "black")

# Combine images with the arrow
final_image <- image_append(c(img1, arrow, img2), stack = FALSE)

# Display the final image
final_image
```

## `r BiocStyle::Biocpkg("TreeSummarizedExperiment")`
<small>[@Huang2021]</small>

![](images/TreeSE.png){fig-alt="TreeSummarizedExperiment class" fig-align="center" width=10%}

## Microbiome Analysis (mia)

```{r}
#| label: mia_stats
#| eval: true

perc <- BiocPkgTools::pkgDownloadRank("mia")
perc <- paste0(perc, "%")
```

- Microbiome data science ecosystem
- "Downstream", statistical analysis
- `r BiocStyle::Biocpkg("mia")` package top `r if(exists("perc")) perc else "*ERROR*"` Bioconductor downloads

<div style="text-align: right;">
  <img src="images/BioconductorSticker1.png" alt="Bioconductor sticker" width="200" style="margin-left: 10px;">
  <img src="images/mia_logo.png" alt="mia logo" width="200">
</div>

## Community-driven ecosystem of tools {.smaller}

::: columns
::: {.column width="70%"}

- `r BiocStyle::Biocpkg("mia")` (Data analysis)
- `r BiocStyle::Biocpkg("miaViz")` (Visualization)
- `r BiocStyle::Biocpkg("miaSim")` (Simulation)
- [miaTime](https://github.com/microbiome/miaTime) (Time series analysis)
- `r BiocStyle::Biocpkg("miaDash")` (Graphical user interface)
- `r BiocStyle::Biocpkg("iSEETree")` (Interactive visualization)
- [Expanded by independent developers](https://microbiome.github.io/OMA/docs/devel/pages/miaverse.html#sec-packages)

:::

::: {.column width="30%"}

![](https://raw.githubusercontent.com/microbiome/mia/refs/heads/devel/man/figures/mia_logo.png){fig-alt="mia logo." width=20%}
![](https://raw.githubusercontent.com/EBI-Metagenomics/MGnifyR/refs/heads/devel/man/figures/mgnifyr_logo.png){fig-alt="MGnifyR logo." width=20%}
![](https://raw.githubusercontent.com/EBI-Metagenomics/HoloFoodR/refs/heads/devel/man/figures/holofoodr_logo.png){fig-alt="HoloFoodR logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/iSEE/iSEE.png){fig-alt="iSEE logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/MultiAssayExperiment/MultiAssayExperiment.png){fig-alt="MAE logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/SummarizedExperiment/SummarizedExperiment.png){fig-alt="SE logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/SingleCellExperiment/SingleCellExperiment.png){fig-alt="SCE logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/scater/scater.png){fig-alt="scater logo." width=20%}
![](https://pbs.twimg.com/media/FDNU5KgWYAcnU8w.jpg){fig-alt="benchdamic logo." width=20%}
![](https://netcomi.de/logo.png){fig-alt="netcomi logo." width=20%}
![](https://raw.githubusercontent.com/statdivlab/radEmu/refs/heads/main/man/figures/logo.png){fig-alt="radEmu logo." width=20%}
![](https://mikelove.github.io/assets/DESeq2.png){fig-alt="DESeq2 logo." width=20%}
![](https://avatars.githubusercontent.com/u/18152373?s=280&v=4){fig-alt="Biobakery logo." width=20%}
:::

:::

## Community-driven ecosystem of tools {.smaller}

::: columns
::: {.column width="70%"}

- `r BiocStyle::Biocpkg("mia")` (Data analysis)
- `r BiocStyle::Biocpkg("miaViz")` (Visualization)
- `r BiocStyle::Biocpkg("miaSim")` (Simulation)
- [miaTime](https://github.com/microbiome/miaTime) (Time series analysis)
- `r BiocStyle::Biocpkg("miaDash")` (Graphical user interface)
- `r BiocStyle::Biocpkg("iSEETree")` (Interactive visualization)
- [Expanded by independent developers](https://microbiome.github.io/OMA/docs/devel/pages/miaverse.html#sec-packages)

**Interoperable with the `r BiocStyle::Biocpkg("SummarizedExperiment")` ecosystem**

:::

::: {.column width="30%"}

![](https://raw.githubusercontent.com/microbiome/mia/refs/heads/devel/man/figures/mia_logo.png){fig-alt="mia logo." width=20%}
![](https://raw.githubusercontent.com/EBI-Metagenomics/MGnifyR/refs/heads/devel/man/figures/mgnifyr_logo.png){fig-alt="MGnifyR logo." width=20%}
![](https://raw.githubusercontent.com/EBI-Metagenomics/HoloFoodR/refs/heads/devel/man/figures/holofoodr_logo.png){fig-alt="HoloFoodR logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/iSEE/iSEE.png){fig-alt="iSEE logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/MultiAssayExperiment/MultiAssayExperiment.png){fig-alt="MAE logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/SummarizedExperiment/SummarizedExperiment.png){fig-alt="SE logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/SingleCellExperiment/SingleCellExperiment.png){fig-alt="SCE logo." width=20%}
![](https://raw.githubusercontent.com/Bioconductor/BiocStickers/refs/heads/devel/scater/scater.png){fig-alt="scater logo." width=20%}
![](https://pbs.twimg.com/media/FDNU5KgWYAcnU8w.jpg){fig-alt="benchdamic logo." width=20%}
![](https://netcomi.de/logo.png){fig-alt="netcomi logo." width=20%}
![](https://raw.githubusercontent.com/statdivlab/radEmu/refs/heads/main/man/figures/logo.png){fig-alt="radEmu logo." width=20%}
![](https://mikelove.github.io/assets/DESeq2.png){fig-alt="DESeq2 logo." width=20%}
![](https://avatars.githubusercontent.com/u/18152373?s=280&v=4){fig-alt="Biobakery logo." width=20%}
:::

:::

## Demonstration

## {auto-animate="true"}

```r
library(mia)
```

## {auto-animate="true"}

```r
library(mia)

tse <- importMetaPhlAn(
    file = "path_to_your_file.txt",
    col.data = "metadata_file.csv",
    tree.file = "phylogeny.nwk"
)
```

## {auto-animate=true}

```r
library(mia)

tse <- importMetaPhlAn(
    file = "path_to_your_file.txt"
    col.data = "metadata_file.csv",
    tree.file = "phylogeny.nwk"
)

print(tse)
```

```{r}
#| label: import
#| attr-output: "style='font-size: 0.4em'"

library(curatedMetagenomicData)
res <- curatedMetagenomicData(
    pattern = "2021-03-31.GuptaA_2019.relative_abundance",
    dryrun = FALSE,
    counts = TRUE,
    rownames = "short"
)
tse <- res[[1L]]
assayNames(tse) <- "counts"
tse
```

## {auto-animate=true}

```r
# Agglomerate data
tse <- agglomerateByRanks(tse)
```

## {auto-animate=true}

```r
# Agglomerate data
tse <- agglomerateByRanks(tse)

# Apply transformation
tse <- transformAssay(tse, method = "relabundance")
```

## {auto-animate=true}

```r
# Agglomerate data
tse <- agglomerateByRanks(tse)

# Apply transformation
tse <- transformAssay(tse, method = "relabundance")

print(tse)
```

```{r}
#| label: preprocess
#| attr-output: "style='font-size: 0.4em'"

library(mia)

tse <- agglomerateByRanks(tse)
tse <- transformAssay(tse, method = "relabundance")
tse
```

## {auto-animate=true}

```r
library(miaViz)
```

## {auto-animate=true}

```r
library(miaViz)

plotAbundance(
    tse,
    rank = "phylum",
    assay.type = "relabundance",
    col.var = "disease"
)
```
## {auto-animate=true}

```r
library(miaViz)

plotAbundance(
    tse,
    rank = "phylum",
    assay.type = "relabundance",
    col.var = "disease"
)
```

```{r}
#| label: plot_abundance
#| fig-height: 4

library(miaViz)

plotAbundance(
    tse,
    rank = "phylum",
    assay.type = "relabundance",
    as.relative = TRUE,
    col.var = "disease",
    facet.cols = TRUE,
    scales = "free_x"
) +
  guides(fill = guide_legend(title = "Phylum"))
```

## {auto-animate=true}

```r
# Calculate alpha diversity
tse <- addAlpha(tse)
```

## {auto-animate=true}

```r
# Calculate alpha diversity
tse <- addAlpha(tse)

# Visualize results
library(scater)
plotColData(tse, x = "disease", y = "faith_diversity")
```

## {auto-animate=true}

```r
# Calculate alpha diversity
tse <- addAlpha(tse)

# Visualize results
library(scater)
plotColData(tse, x = "disease", y = "faith_diversity")
```

```{r}
#| label: plot_alpha
#| fig-height: 4.5

tse <- addAlpha(tse, assay.type = "relabundance")

library(scater)
plotColData(tse, x = "disease", y = "faith_diversity") +
    theme(
        axis.title = element_text(size = 16),
        axis.text = element_text(size = 14),
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 16),
        plot.title = element_text(size = 18)
  ) +
  labs(x = "Disease", y = "Faith's diversity")
```

## {auto-animate=true}

```r
# Calculate MDS
tse <- addMDS(tse, method = "unifrac")
```

## {auto-animate=true}

```r
# Calculate MDS
tse <- addMDS(tse, method = "unifrac")

# Visualize results
plotReducedDim(tse, dimred = "MDS", colour_by = "disease")
```

## {auto-animate=true}

```r
# Calculate MDS
tse <- addMDS(tse, method = "unifrac")

# Visualize results
plotReducedDim(tse, dimred = "MDS", colour_by = "disease")
```

```{r}
#| label: plot_mds
#| fig-height: 5

tse <- addMDS(tse, assay.type = "relabundance", method = "unifrac")
plotReducedDim(tse, dimred = "MDS", colour_by = "disease", point_size = 3) +
    theme(
        axis.title = element_text(size = 16),
        axis.text = element_text(size = 14),
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 16),
        plot.title = element_text(size = 18)
  )
```

## Online book

- Resources and tutorials for microbiome analysis
- Community-built best practices
- **Open to contributions!**

<p style="text-align: right;">
  [![](images/OMA_ss.png){width=500px}](https://microbiome.github.io/OMA/docs/devel/){preview-link="true"}
</p>


## Acknowledgements {.smaller}

::: columns
::: {.column width="50%" style="font-size: 0.8em; line-height: 1.1;"}

Leo Lahti,
Felix M. Ernst,
Giulio Benedetti,
Sudarshan Shetty,
Muluh Geraldson,
Akewak Jeba,
Thomaz Bastiaanssen,
Aura Raulo,
Levi Waldron,
Henrik Eckermann,
Chouaib Benchraka,
Yağmur Şimşek,
Basil Courbayre,
Matti Ruuskanen,
Stefanie Peschel,
Christian L. Müller,
Aki Havulinna,
Shigdel Rajesh,
Artur Sannikov,
Himmi Lindgren,
Lu Yang,
Katariina Pärnänen,
Noah de Gunst,
Axel Dagnaud,
Ely Seraidarian,
Théotime Pralas,
Jiya Chaudhary,
Elina Chiesa,
Pande Erawijantari,
Shadman Ishraq,
Sam Hillman,
Matteo Calgaro,
Basil Courbayre Dussau,
Yang Cao,
Eineje Ameh,
Domenick J. Braccia,
Renuka Potbhare,
Hervé Pagès,
Moritz E. Beber,
Vivian Ikeh,
Yu Gao,
Daniel Garza,
Karoline Faust,
Jacques Serizay,
Himel Mallick,
Yihan Liu,
Danielle Callan,
Ben Allen,
Teo Dallier,
Elliot Gaudron-Parry,
Inès Benseddik,
Jesse Pasanen,
Benjamin Valderrama
:::

::: {.column width="50%"}

![](https://apps.utu.fi/media/logo/UTU_logo_EN_RGB.png){fig-alt="University of Turku logo" width="150" fig-align="center"}


![](https://www.ebi.ac.uk/metagenomics/static/50d6b60518ea8b4816b9.png){fig-alt="UTU logo" width="150" fig-align="center"}


![](https://media.aka.fi/api/v3/public/file/497671429c8b0783/thumbnail.jpg?version=e5566c3f8491a9bcc65c74594efa47c0){fig-alt="Research Council of Finland logo" width="150" fig-align="center"}


![](https://biocityturku.fi/wp-content/uploads/2023/06/CompLifeSci-color-balck-01-2-720x217.png){fig-alt="CompLifeSci logo" width="150" fig-align="center"}


![](https://www.yliopistosaatio.fi/wp-content/uploads/2024/02/logo-vaaka-turun-yliopistosatio.webp){fig-alt="Turun yliopistosäätiö logo" width="150" fig-align="center"}
:::

:::

## Thank you for your time! {.smaller}

:::{.columns}

::: {.column width="30%"}
![](images/mia_logo.png)
:::

::: {.column width="70%"}

```{r}
#| label: qrcode
#| fig-align: center
#| echo: false

library(qrcode)
qr_code("https://microbiome.github.io/OMA/docs/devel/") |> plot()
```

<center><em>Orchestrating Microbiome Analysis</em> online book</center>

:::

:::

## References
