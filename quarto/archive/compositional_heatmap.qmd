---
title: "Compositional Heatmaps"
format: revealjs
editor: visual
smaller: true
bibliography: references.bib
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = TRUE)
```

## Example 1.1

We first import the packages used in this tutorial.

```{r}
#| label: packages
# Import libraries
library(mia)
library(ComplexHeatmap)
```

We also import Tengeler2020 from the mia package and store it into a variable.

```{r}
#| label: import-tengeler
# Load dataset and store it into tse
data("Tengeler2020", package = "mia")
tse <- Tengeler2020
```

Next, we transform the counts assay to relative abundance assay and store it into the TreeSE.

```{r}
#| label: transform-relabundance
# Transform counts to relative abundances
tse <- transformAssay(tse, method = "relabundance")
```

Then, we agglomerate the experiment to the order level, so that information is more condensed and therefore easier to visualise and interpret.

```{r}
#| label: agglomerate-order
# Agglomerate by order
tse_order <- agglomerateByRank(tse, rank = "Order")
```

## Why relative abundances?

Microbiome data is compositional. Relative abundance helps us draw less biased comparisons between samples.

```{r}
#| label: fig-abund
#| fig-cap: Sample composition by counts (left) or relative abundance (right).
#| code-fold: true
#| code-summary: "Show code"
# Import packages
library(miaViz)
library(patchwork)

# Plot composition by counts
counts_bar <- plotAbundance(tse_order, rank = "Phylum", use_relative = FALSE) +
  ylab("Counts")

# Plot composition by relative abundance
relab_bar <- plotAbundance(tse_order, rank = "Phylum", use_relative = TRUE) +
  ylab("Relative Abundance")

# Combine plots
(counts_bar | relab_bar) +
  plot_layout(guides = "collect")
```

## Example 1.2

To reduce data skewness, we further transform the relative abundance assay with the **Centered-Log Ratio** (CLR), which is defined as follows:

$$
clr = log \frac{x}{g(x)} = log(x)âˆ’log[g(x)]
$$

where x is a feature and g(x) is the geometric mean of all features in a sample.

```{r}
#| label: transform-clrz
# Transform relative abundances to clr
tse_order <- transformAssay(tse_order,
                            assay.type = "relabundance",
                            method = "clr",
                            pseudocount = 1,
                            MARGIN = "samples")
```

Lastly, we get the row-wise **z-scores** of every feature from the clr assay to standardise abundances across samples.

```{r}
# Transform clr to z
tse_order <- transformAssay(tse_order,
                            assay.type = "clr", 
                            method = "z",
                            name = "clr_z",
                            MARGIN = "features")
```

## Example 1.3

Finally, we visualise the clr-z assay with `ComplexHeatmap`.

```{r}
#| label: fig-compheat
#| fig-cap: Heatmap of CLR-Z assay where columns correspond to samples and rows
#|   to taxa agglomerated by order.
# Visualise clr-z assay with a heatmap
clrz_hm <- Heatmap(assay(tse_order, "clr_z"), name = "clr-z")
clrz_hm
```

## Why clr-z transformation?

A CLR-z transformation improves comparability in two steps:

1.  Apply **CLR transform** to center features **column-wise**
2.  Find **Z score** to standardise features **row-wise**

```{r}
#| label: heatmap-comparison
#| echo: false
assay2heatmap <- function(tse, assay.type) {
  
    hm_args <- list(matrix = assay(tse, assay.type), name = assay.type,
        show_row_names = FALSE, show_column_names = FALSE,
        show_row_dend = FALSE, show_column_dend = FALSE, cluster_columns = FALSE,
        border = TRUE, rect_gp = gpar(col = "white", lwd = 1),
        heatmap_legend_param = list(direction = "horizontal",
                                    title_position = "topcenter"))

    hm <- do.call(Heatmap, hm_args)
    return(hm)
}

counts_hm <- assay2heatmap(tse_order, "counts")
relab_hm <- assay2heatmap(tse_order, "relabundance")
clr_hm <- assay2heatmap(tse_order, "clr")
clrz_hm <- assay2heatmap(tse_order, "clr_z")
```

```{r}
#| label: fig-comparison
#| fig-cap: Visual comparison between counts, relative abundance, clr and clr-z
#|   assays (from left to right).
#| echo: false
draw(counts_hm + relab_hm + clr_hm + clrz_hm,
     row_title = "Features", column_title = "Samples",
     column_title_side = "bottom", heatmap_legend_side = "top")
```

## Exercise 1

-   heatmap visualisation: [exercise 9.2](https://microbiome.github.io/OMA/docs/devel/pages/98_exercises.html#heatmap-visualization){target="_blank"}

Extra:

-   advanced heatmap: [exercise 9.3](https://microbiome.github.io/OMA/docs/devel/pages/98_exercises.html#advanced-heatmaps){target="_blank"}

## Resources

-   [OMA Chapter - Community Composition](https://microbiome.github.io/OMA/docs/devel/pages/21_microbiome_community.html){target="_blank"}
-   [OMA Chapter - Visualisation](https://microbiome.github.io/OMA/docs/devel/pages/19_visualization_techniques.html){target="_blank"}
-   [ComplexHeatmap Complete Reference](https://jokergoo.github.io/ComplexHeatmap-reference/book/){target="_blank"}
