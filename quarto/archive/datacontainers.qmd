---
title: "Data containers in R/Bioconductor"
format: revealjs
---

## Stuctured way to represent data

- Biological data cannot be represented with a single table
- Managing multiple tables becomes easily a bottleneck of efficient workflows

##

```{r}
#| label: pages_and_book

library(magick)

img1 <- image_read("images/pile_of_papers.webp")
img2 <- image_read("images/book.webp")
arrow <- image_blank(width = 500, height = 1000, color = "none") %>%
  image_annotate("→", size = 200, gravity = "center", color = "black")

# Combine images with the arrow
final_image <- image_append(c(img1, arrow, img2), stack = FALSE)

# Display the final image
final_image
```

##

```{r}
#| label: data_and_data_container

library(magick)

img1 <- image_read("images/unorganized_data.webp")
img2 <- image_read("images/SE.png")
img2 <- image_scale(img2, "200%")  # This will make img2 twice as big
arrow <- image_blank(width = 500, height = 1000, color = "none") %>%
  image_annotate("→", size = 200, gravity = "center", color = "black")

# Combine images with the arrow
final_image <- image_append(c(img1, arrow, img2), stack = FALSE)

# Display the final image
final_image
```

## Standardized data containers

Central for the R/Bioconductor ecosystem: *phyloseq, (Tree)SummarizedExperiment, MultiAssayExperiment*

```{r}
#| label: data_container

# Load libraries
library(ggplot2)
library(ggforce)

# Adjusting the text positions for better alignment
ellipse_data <- data.frame(
    x = c(0, 0, 0),         # Centers of ellipses
    y = c(2, 1, 0),         # Centers of ellipses
    a = c(4, 3, 2),         # Widths of ellipses
    b = c(3, 2, 1),         # Heights of ellipses
    label = c("COMMUNITY", "METHODS", "DATA CONTAINER"),  # Labels for each ellipse
    label_y = c(4, 1.75, 0) # Adjusted vertical positions for labels
)

# Plot with adjusted labels
ggplot() +
    geom_ellipse(data = ellipse_data, 
                 aes(x0 = x, y0 = y, a = a, b = b, angle = 0),
                 color = "darkgreen", fill = "grey90", alpha = 0.7) +
    geom_text(data = ellipse_data, 
              aes(x = x, y = label_y, label = label), 
              size = 5, fontface = "bold") +
    coord_fixed() +
    theme_void()
```

## Data containers support collaborative workflow development

![](images/paste-DB20F164.png){width="550"}

## _SummarizedExperiment_

- Most common data container
- Optimized for biological data
- Extended to different purposes

```{r}
#| label: se_field
#| fig-align: "right"
#| eval: true

# Get packages and info based on their BiocViews
pkgs <- BiocPkgTools::biocPkgList()
#
pkgs[["SE"]] <- sapply(pkgs$Depends, function(x) any(grepl("summarizedexperiment", x, ignore.case = TRUE)) )
pkgs <- pkgs[pkgs[["SE"]], ]
fields <- sapply(pkgs$biocViews, function(x){
    field <- "Other"
    if( any(grepl("genomic|genetic|gene|genom|DNA", x, ignore.case = TRUE)) ){
        field <- "Genomics"
    }
    if( any(grepl("proteomics|protein", x, ignore.case = TRUE)) ){
        field <- "Proteomics"
    }
    if( any(grepl("metabolomics|metabolome|metabolite|Lipidom|massspectro", x, ignore.case = TRUE)) ){
        field <- "Metabolomics"
    }
    if( any(grepl("transcripto|RNA-seq|RNA", x, ignore.case = TRUE)) ){
        field <- "Transcriptomics"
    }
    if( any(grepl("immuno", x, ignore.case = TRUE)) ){
        field <- "Immunology"
    }
    if( any(grepl("cytom", x, ignore.case = TRUE)) ){
        field <- "Cytometrics"
    }
    if( any(grepl("microarray|chip", x, ignore.case = TRUE)) ){
        field <- "Microarray"
    }
    if( any(grepl("single-cell|singlecell", x, ignore.case = TRUE)) ){
        field <- "Single-cell"
    }
    if( any(grepl("metagenom|microbiome|16S|microbiota|amplicon|shotgun|microb|metatranscript|metametabolo|metaproteo", x, ignore.case = TRUE)) ){
        field <- "Microbiome"
    }
    return(field)
})
pkgs[["Field"]] <- fields
pkgs[pkgs[["Package"]] %in% c("mia", "miaViz", "miaSim", "iSEEtree", "HoloFoodR", "MGnifyR"), "Field"] <- "Microbiome"
#
se_pkgs <- data.frame(table(pkgs$Field))
colnames(se_pkgs) <- c("Field", "N")
#
library(tidyverse)
library(ggrepel)
df2 <- se_pkgs %>% 
  mutate(csum = rev(cumsum(rev(N))), 
         pos = N/2 + lead(csum, 1),
         pos = if_else(is.na(pos), N/2, pos))
#
ggplot(se_pkgs, aes(x = "" , y = N, fill = fct_inorder(Field))) +
  geom_col(width = 1, color = 1) +
  coord_polar(theta = "y") +
  scale_fill_brewer(palette = "Paired") +
  geom_label_repel(data = df2, aes(y = pos, label = N), size = 4.5, nudge_x = 1, show.legend = FALSE) +
  guides(fill = guide_legend(title = "Field")) +
  theme_void()
```

##

![](images/SE.png){fig-alt="SummarizedExperiment class" fig-align="center" width=10%}

##

![](images/paste-27F811B1.png)

##

![](images/paste-617FF710.png)

##

![](images/paste-AA8BAE15.png)

## Optimal container for microbiome data? {auto-animate=true}

## Optimal container for microbiome data? {auto-animate=true}

- **Multiple assays**: seamless interlinking

## Optimal container for microbiome data? {auto-animate=true}

- **Multiple assays**: seamless interlinking
- **Hierarchical data**: supporting samples & features

## Optimal container for microbiome data? {auto-animate=true}

- **Multiple assays**: seamless interlinking
- **Hierarchical data**: supporting samples & features
- **Side information**: extended capabilities & data types

## Optimal container for microbiome data? {auto-animate=true}

- **Multiple assays**: seamless interlinking
- **Hierarchical data**: supporting samples & features
- **Side information**: extended capabilities & data types
- **Optimized**: for speed & memory

## Optimal container for microbiome data? {auto-animate=true}

- **Multiple assays**: seamless interlinking
- **Hierarchical data**: supporting samples & features
- **Side information**: extended capabilities & data types
- **Optimized**: for speed & memory
- **Integrated**: with other applications & frameworks

## Optimal container for microbiome data? {auto-animate=true}

- **Multiple assays**: seamless interlinking
- **Hierarchical data**: supporting samples & features
- **Side information**: extended capabilities & data types
- **Optimized**: for speed & memory
- **Integrated**: with other applications & frameworks


_Reduce overlapping efforts, improve interoperability, ensure sustainability._

## _phyloseq_

- The first microbome data container from around 2010.
- Has become standard for (16S) microbiome bioinformatics in R (J McMurdie, S Holmes et al.)

![](images/paste-43F123A2.png)

## _TreeSummarizedExperiment_
### New, alternative microbiome data container.

- Extension to SummarizedExperiment
- Optimal for microbiome data
- Links microbiome field to larger SummarizedExperiment family

_Huang et al. F1000, 2021_

##

![](images/SE.png){fig-alt="SummarizedExperiment class" fig-align="center" width=10%}

## 

![](images/TreeSE.png){fig-alt="TreeSummarizedExperiment class" fig-align="center" width=10%}

##  {.smaller}

**Orchestrating Microbiome Analysis with R and Bioconductor -- online book: beta version**

![](images/OMA_ss.png){width="500"}

## Current framework

- _(Tree)SummarizedExperiment_ for single omics
- _MultiAssayExperiment_ for multi-omics

## MultiAssayExperiment

- Links _(Tree)SummarizedExperiment_ objects

![](images/MultiAssayExperiment.png)

_Ramos et al. Cancer Res., 2017_

## Task: load microbiome data

Load an example data set from the mia R package with:

```{r}
#| label: show_demo_data1
#| echo: true

library(mia)
data(HintikkaXOData)
```

Source: Hintikka et al. (2021). Xylo-oligosaccharides in prevention of hepatic steatosis and adipose tissue inflammation: Associating taxonomic and metabolomic patterns in fecal microbiomes with biclustering. *International Journal of Environmental Research and Public Health* 18(8) <https://doi.org/10.3390/ijerph18084049>

## Task: load microbiome data

This is MultiAssayExperiment data object. Let us check what experiment it contains.

```{r}
#| label: show_demo_data2
#| echo: true

mae <- HintikkaXOData
experiments(mae)
```

## Task: load microbiome data

Let us pick the microbiota data, which is _TreeSummarizedExperiment_ object.

```{r}
#| label: show_demo_data3
#| echo: true

tse <- mae[["microbiota"]]
tse
```

## Open microbiome data resources

Open microbiome data resources supporting *TreeSummarizedExperiment*:

- R package data ([mia](https://microbiome.github.io/mia/reference/index.html), [miaViz](https://microbiome.github.io/miaViz/reference/index.html), [miaTime](https://microbiome.github.io/miaTime/reference/index.html))
- Human studies: [curatedMetagenomicData](https://waldronlab.io/curatedMetagenomicData/articles/available-studies.html) (Pasolli *et al.* [Nat Meth 2017](https://doi.org/10.1038/nmeth.4468))
- EBI MGnify: [MGnifyR R package](https://ebi-metagenomics.github.io/MGnifyR/)
- Other studies: [microbiomeDataSets](https://microbiome.github.io/microbiomeDataSets/index.html) (Lahti et al.)

See also [OMA chapter](https://microbiome.github.io/OMA/docs/devel/pages/import.html#sec-example-data) on available data sets.
